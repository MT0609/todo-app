{"version":3,"sources":["img/task.png","img/doing.png","img/complete.png","actions/index.js","components/addToDo.js","components/todo.js","components/inProgress.js","components/completed.js","pages/main.js","App.js","serviceWorker.js","reducers/todos.js","reducers/inProgress.js","reducers/completed.js","reducers/index.js","index.js"],"names":["module","exports","add_ToDo","obj","type","payload","AddToDo","props","useState","input","setInput","id","onSubmit","e","preventDefault","match","add","placeholder","value","onChange","target","autoFocus","Button","color","style","margin","fontSize","fontWeight","variant","disableElevation","ToDo","list","addNextStage","remove","className","alt","src","require","map","task","key","Grid","container","alignItems","justify","item","xs","sm","textAlign","content","md","NativeSelect","fullWidth","handleSelect","inputProps","padding","defaultValue","IconButton","onClick","removeFromTodo","Delete","InProgress","CompletedTasks","backStage","removeFromComplete","MainPage","parseInt","localStorage","getItem","count","setCount","todos","useSelector","state","inProgress","completed","dispatch","useDispatch","currentStage","nextStage","add_Completed","removeFromStage","stage","remove_Progress","remove_Complete","todo","setItem","App","Boolean","window","location","hostname","todoTasks","JSON","parse","todosReducer","action","stringify","filter","inProgressTasks","InProgressReducer","completedTasks","completedReducer","rootReducer","combineReducers","store","createStore","rootStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c7e72f50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/task.99fe34de.png\";","module.exports = __webpack_public_path__ + \"static/media/doing.4a10b842.png\";","module.exports = __webpack_public_path__ + \"static/media/complete.dc2fd78b.png\";","export const add_ToDo = (obj) => {\r\n    return {\r\n        type: \"ADD_TODO\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const add_InProgress = (obj) => {\r\n    return {\r\n        type: \"ADD_INPROGRESS\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const add_Completed = (obj) => {\r\n    return {\r\n        type: \"ADD_COMPLETED\",\r\n        payload: obj\r\n    }\r\n}\r\nexport const remove_ToDo = (obj) => {\r\n    return {\r\n        type: \"REMOVE_TODO\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const remove_Progress = (obj) => {\r\n    return {\r\n        type: \"REMOVE_PROGRESS\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const remove_Complete = (obj) => {\r\n    return {\r\n        type: \"REMOVE_COMPLETE\",\r\n        payload: obj\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./style/addForm.css\";\r\n\r\nfunction AddToDo(props) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let regex = /^[0-9a-zA-Z]+/g;\r\n    if (input.match(regex)) props.add(input);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add to-do item...\"\r\n          value={input}\r\n          onChange={handleInputChange}\r\n          autoFocus=\"true\"\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          style={{ margin: \"2rem\", fontSize: \"2rem\", fontWeight: \"bold\" }}\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          disableElevation\r\n        >\r\n          Add Task\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddToDo;\r\n","import React from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport \"./style/task-box.css\";\r\n\r\nfunction ToDo(props) {\r\n  const { list, addNextStage, remove } = props;\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (addNextStage) addNextStage(task, \"todo\", e.target.value);\r\n  };\r\n\r\n  const removeFromTodo = (task) => {\r\n    if (remove) remove(task, \"todo\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"todo-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require(\"../img/task.png\")} />\r\n      <h1>PLAN TASKS</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div className=\"task\" key={task.id}>\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"todo\"\r\n                >\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">PROGRESS</option>\r\n                  <option value=\"complete\">COMPLETE</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromTodo(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport \"./style/task-box.css\";\r\n\r\nfunction InProgress(props) {\r\n  const { list, addNextStage, remove } = props;\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (addNextStage) addNextStage(task, \"progress\", e.target.value);\r\n  };\r\n\r\n  const removeFromProgress = (item) => {\r\n    if (remove) remove(item, \"progress\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"progress-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require(\"../img/doing.png\")} />\r\n      <h1>IN PROGRESS</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div className=\"task\" key={task.id}>\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"progress\"\r\n                >\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">PENDING</option>\r\n                  <option value=\"complete\">COMPLETE</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromProgress(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InProgress;\r\n","import React from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport \"./style/task-box.css\";\r\n\r\nfunction CompletedTasks(props) {\r\n  const { list, remove, backStage } = props;\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (backStage) backStage(task, \"completed\", e.target.value);\r\n  };\r\n\r\n  const removeFromComplete = (task) => {\r\n    if (remove) remove(task, \"complete\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"complete-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require(\"../img/complete.png\")} />\r\n      <h1>COMPLETED</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div className=\"task\" key={task.id}>\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"completed\"\r\n                >\r\n                  <option value=\"completed\">COMPLETED</option>\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">IN PROGRESS</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromComplete(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompletedTasks;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  add_ToDo,\r\n  add_InProgress,\r\n  add_Completed,\r\n  remove_ToDo,\r\n  remove_Progress,\r\n  remove_Complete,\r\n} from \"../actions/index\";\r\nimport AddToDo from \"../components/addToDo\";\r\nimport ToDo from \"../components/todo\";\r\nimport InProgress from \"../components/inProgress\";\r\nimport Completed from \"../components/completed\";\r\nimport \"./main.css\";\r\n\r\nfunction MainPage() {\r\n  const [count, setCount] = useState(\r\n    parseInt(localStorage.getItem(\"count\")) || 0\r\n  ); // make as task id\r\n\r\n  const todos = useSelector((state) => state.todos);\r\n  const inProgress = useSelector((state) => state.inProgress);\r\n  const completed = useSelector((state) => state.completed);\r\n  const dispatch = useDispatch();\r\n\r\n  const addToDo = (todo) => {\r\n    dispatch(add_ToDo({ id: count, content: todo }));\r\n    setCount(count + 1);\r\n    localStorage.setItem(\"count\", count + 1);\r\n  };\r\n\r\n  const addNextStage = (task, currentStage, nextStage) => {\r\n    // if (currentStage === \"todo\") {\r\n    //   if (nextStage === \"progress\") {\r\n    //     dispatch(add_InProgress(task));\r\n    //   } else if (nextStage === \"complete\") {\r\n    //     dispatch(add_Completed(task));\r\n    //   }\r\n    // } else if (currentStage === \"progress\") {\r\n    //   if (nextStage === \"complete\") dispatch(add_Completed(task));\r\n    //   else if (nextStage === \"todo\") dispatch(add_ToDo(task));\r\n    // } else {\r\n    //   // current = \"complete\"\r\n    //   if (nextStage === \"progress\") dispatch(add_InProgress(task));\r\n    //   else if (nextStage === \"todo\") dispatch(add_ToDo(task));\r\n    // }\r\n    if (nextStage === \"progress\") dispatch(add_InProgress(task));\r\n    if (nextStage === \"todo\") dispatch(add_ToDo(task));\r\n    if (nextStage === \"complete\") dispatch(add_Completed(task));\r\n\r\n    if (currentStage !== nextStage) removeFromStage(task, currentStage);\r\n  };\r\n\r\n  const removeFromStage = (task, stage) => {\r\n    if (stage === \"todo\") dispatch(remove_ToDo(task));\r\n    else if (stage === \"progress\") dispatch(remove_Progress(task));\r\n    // stage = complete\r\n    else dispatch(remove_Complete(task));\r\n  };\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <div>\r\n        <AddToDo add={addToDo} />\r\n      </div>\r\n\r\n      <div id=\"task-boxes\">\r\n        <ToDo\r\n          list={todos}\r\n          addNextStage={addNextStage}\r\n          remove={removeFromStage}\r\n        />\r\n        <InProgress\r\n          list={inProgress}\r\n          addNextStage={addNextStage}\r\n          remove={removeFromStage}\r\n        />\r\n        <Completed\r\n          list={completed}\r\n          backStage={addNextStage}\r\n          remove={removeFromStage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ToDoPage from './pages/main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToDoPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var todoTasks = JSON.parse(localStorage.getItem(\"todo\")) || [];\r\n\r\nconst todosReducer = (state = todoTasks, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\":\r\n            state = [...state, action.payload]\r\n            localStorage.setItem(\"todo\", JSON.stringify(state));\r\n            return state;   \r\n        case \"REMOVE_TODO\":\r\n            state = state.filter(item => item.id !== action.payload.id);\r\n            localStorage.setItem(\"todo\", JSON.stringify(state));\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todosReducer;","var inProgressTasks = JSON.parse(localStorage.getItem(\"inProgress\")) || [];\r\n\r\nconst InProgressReducer = (state = inProgressTasks, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_INPROGRESS\":\r\n            state = [...state, action.payload]\r\n            localStorage.setItem(\"inProgress\", JSON.stringify(state));\r\n            return state;\r\n        case \"REMOVE_PROGRESS\":\r\n            state = state.filter(item => item.id !== action.payload.id);\r\n            localStorage.setItem(\"inProgress\", JSON.stringify(state));\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default InProgressReducer;","var completedTasks = JSON.parse(localStorage.getItem(\"complete\")) || [];\r\n\r\nconst completedReducer = (state = completedTasks, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_COMPLETED\":\r\n            state = [...state, action.payload]\r\n            localStorage.setItem(\"complete\", JSON.stringify(state));\r\n            return state;\r\n        case \"REMOVE_COMPLETE\":\r\n            state = state.filter(item => item.id !== action.payload.id);\r\n            localStorage.setItem(\"complete\", JSON.stringify(state));\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default completedReducer;","import {combineReducers} from 'redux'\r\nimport todosReducer from  './todos'\r\nimport inProgress from './inProgress'\r\nimport completed from './completed'\r\n\r\nconst rootReducer = combineReducers({ \r\n    todos: todosReducer, inProgress: inProgress, completed: completed\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport rootStore from './reducers/index';\r\n\r\nconst store = createStore(\r\n  rootStore, \r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()      //for CHROME REDUX DEVTOOLS extension\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}