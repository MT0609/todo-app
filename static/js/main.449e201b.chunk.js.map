{"version":3,"sources":["img/task.png","img/doing.png","img/complete.png","actions/index.js","components/addToDo.js","components/edit.js","components/todo.js","components/inProgress.js","components/completed.js","pages/main.js","App.js","serviceWorker.js","reducers/todos.js","reducers/inProgress.js","reducers/completed.js","reducers/index.js","index.js"],"names":["module","exports","add_ToDo","obj","type","payload","AddToDo","props","useState","input","setInput","onSubmit","e","preventDefault","match","add","Grid","container","spacing","justify","item","xs","md","placeholder","value","onChange","target","autoFocus","Button","color","style","padding","height","fontSize","fontWeight","variant","disableElevation","Add","Transition","React","forwardRef","ref","Slide","direction","useStyles","makeStyles","root","EditDialog","classes","show","onclose","onupdate","data","console","log","name","setName","handleClose","handleUpdate","id","content","Container","maxWidth","Dialog","open","TransitionComponent","onClose","fullWidth","className","DialogTitle","DialogContent","TextField","disabled","label","onKeyPress","key","DialogActions","onClick","ToDo","list","addNextStage","remove","onUpdateName","updateShow","SetUpdateShow","selectTask","setSelectTask","alt","src","require","map","task","alignItems","sm","textAlign","IconButton","onEditClick","Edit","NativeSelect","handleSelect","inputProps","defaultValue","removeFromTodo","Delete","InProgress","CompletedTasks","backStage","removeFromComplete","MainPage","parseInt","localStorage","getItem","count","setCount","todos","useSelector","state","inProgress","completed","dispatch","useDispatch","currentStage","nextStage","add_Completed","removeFromStage","stage","remove_Progress","remove_Complete","handleUpdateName","editName_Progress","editName_Complete","todo","setItem","App","Boolean","window","location","hostname","todoTasks","JSON","parse","todosReducer","action","stringify","filter","newState","index","findIndex","push","inProgressTasks","InProgressReducer","completedTasks","completedReducer","rootReducer","combineReducers","store","createStore","rootStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.449e201b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/task.99fe34de.png\";","module.exports = __webpack_public_path__ + \"static/media/doing.4a10b842.png\";","module.exports = __webpack_public_path__ + \"static/media/complete.dc2fd78b.png\";","export const add_ToDo = (obj) => {\r\n  return {\r\n    type: \"ADD_TODO\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const add_InProgress = (obj) => {\r\n  return {\r\n    type: \"ADD_INPROGRESS\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const add_Completed = (obj) => {\r\n  return {\r\n    type: \"ADD_COMPLETED\",\r\n    payload: obj,\r\n  };\r\n};\r\nexport const remove_ToDo = (obj) => {\r\n  return {\r\n    type: \"REMOVE_TODO\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const remove_Progress = (obj) => {\r\n  return {\r\n    type: \"REMOVE_PROGRESS\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const remove_Complete = (obj) => {\r\n  return {\r\n    type: \"REMOVE_COMPLETE\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const editName_ToDo = (obj) => {\r\n  return {\r\n    type: \"EDIT_NAME_TODO\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const editName_Progress = (obj) => {\r\n  return {\r\n    type: \"EDIT_NAME_PROGRESS\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const editName_Complete = (obj) => {\r\n  return {\r\n    type: \"EDIT_NAME_COMPLETE\",\r\n    payload: obj,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport \"./style/addForm.css\";\r\n\r\nfunction AddToDo(props) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let regex = /^[0-9a-zA-Z]+/g;\r\n    if (input.match(regex)) props.add(input);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item xs={8} md={10}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"add to-do item...\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n            autoFocus=\"true\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            style={{\r\n              padding: \"1rem 0\",\r\n              height: \"70%\",\r\n              fontSize: \"2rem\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            disableElevation\r\n          >\r\n            <Add fontSize=\"large\" />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddToDo;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& .MuiTypography-h6\": {\r\n      fontSize: \"2rem\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function EditDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const { show = false, onclose, onupdate, data = {} } = props;\r\n  console.log(data);\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    if (onclose) onclose();\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    if (onupdate) {\r\n      setName(\"\");\r\n      onupdate({\r\n        id: data.id,\r\n        content: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Dialog\r\n        open={show}\r\n        TransitionComponent={Transition}\r\n        onClose={handleClose}\r\n        fullWidth\r\n        className={classes.root}\r\n      >\r\n        <DialogTitle>Edit task name</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            disabled\r\n            value={data?.content}\r\n            label=\"Task name\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            autoFocus\r\n            label=\"New name\"\r\n            fullWidth\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") handleUpdate();\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleUpdate} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport EditDialog from \"./edit\";\r\nimport \"./style/task-box.css\";\r\n\r\nfunction ToDo(props) {\r\n  const { list, addNextStage, remove, onUpdateName } = props;\r\n\r\n  const [updateShow, SetUpdateShow] = useState(false);\r\n  const [selectTask, setSelectTask] = useState(null);\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (addNextStage) addNextStage(task, \"todo\", e.target.value);\r\n  };\r\n\r\n  const removeFromTodo = (task) => {\r\n    if (remove) remove(task, \"todo\");\r\n  };\r\n\r\n  const onEditClick = (task) => {\r\n    setSelectTask(task);\r\n    SetUpdateShow(true);\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    if (!task.content) return;\r\n    if (onUpdateName) onUpdateName(task, \"todo\");\r\n    SetUpdateShow(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"todo-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require(\"../img/task.png\")} />\r\n      <h1>PLAN TASKS</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div className=\"task\" key={task.id}>\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  <IconButton onClick={() => onEditClick(task)}>\r\n                    <Edit fontSize=\"large\" />\r\n                  </IconButton>\r\n\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"todo\"\r\n                >\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">PROGRESS</option>\r\n                  <option value=\"complete\">COMPLETE</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromTodo(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <EditDialog\r\n        data={selectTask}\r\n        show={updateShow}\r\n        onclose={() => SetUpdateShow(false)}\r\n        onupdate={handleEdit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport EditDialog from \"./edit\";\r\nimport \"./style/task-box.css\";\r\n\r\nfunction InProgress(props) {\r\n  const { list, addNextStage, remove, onUpdateName } = props;\r\n\r\n  const [updateShow, SetUpdateShow] = useState(false);\r\n  const [selectTask, setSelectTask] = useState(null);\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (addNextStage) addNextStage(task, \"progress\", e.target.value);\r\n  };\r\n\r\n  const removeFromProgress = (item) => {\r\n    if (remove) remove(item, \"progress\");\r\n  };\r\n\r\n  const onEditClick = (task) => {\r\n    setSelectTask(task);\r\n    SetUpdateShow(true);\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    if (!task.content) return;\r\n    if (onUpdateName) onUpdateName(task, \"progress\");\r\n    SetUpdateShow(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"progress-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require(\"../img/doing.png\")} />\r\n      <h1>IN PROGRESS</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div className=\"task\" key={task.id}>\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  <IconButton onClick={() => onEditClick(task)}>\r\n                    <Edit fontSize=\"large\" />\r\n                  </IconButton>\r\n\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"progress\"\r\n                >\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">PENDING</option>\r\n                  <option value=\"complete\">COMPLETE</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromProgress(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <EditDialog\r\n        data={selectTask}\r\n        show={updateShow}\r\n        onclose={() => SetUpdateShow(false)}\r\n        onupdate={handleEdit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InProgress;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport EditDialog from \"./edit\";\r\nimport \"./style/task-box.css\";\r\n\r\nfunction CompletedTasks(props) {\r\n  const { list, remove, backStage, onUpdateName } = props;\r\n\r\n  const [updateShow, SetUpdateShow] = useState(false);\r\n  const [selectTask, setSelectTask] = useState(null);\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (backStage) backStage(task, \"completed\", e.target.value);\r\n  };\r\n\r\n  const removeFromComplete = (task) => {\r\n    if (remove) remove(task, \"complete\");\r\n  };\r\n\r\n  const onEditClick = (task) => {\r\n    setSelectTask(task);\r\n    SetUpdateShow(true);\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    if (!task.content) return;\r\n    if (onUpdateName) onUpdateName(task, \"complete\");\r\n    SetUpdateShow(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"complete-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require(\"../img/complete.png\")} />\r\n      <h1>COMPLETED</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div className=\"task\" key={task.id}>\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  <IconButton onClick={() => onEditClick(task)}>\r\n                    <Edit fontSize=\"large\" />\r\n                  </IconButton>\r\n\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"completed\"\r\n                >\r\n                  <option value=\"completed\">COMPLETED</option>\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">IN PROGRESS</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromComplete(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <EditDialog\r\n        data={selectTask}\r\n        show={updateShow}\r\n        onclose={() => SetUpdateShow(false)}\r\n        onupdate={handleEdit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompletedTasks;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  add_ToDo,\r\n  add_InProgress,\r\n  add_Completed,\r\n  remove_ToDo,\r\n  remove_Progress,\r\n  remove_Complete,\r\n  editName_ToDo,\r\n  editName_Progress,\r\n  editName_Complete,\r\n} from \"../actions/index\";\r\nimport AddToDo from \"../components/addToDo\";\r\nimport ToDo from \"../components/todo\";\r\nimport InProgress from \"../components/inProgress\";\r\nimport Completed from \"../components/completed\";\r\nimport \"./main.css\";\r\n\r\nfunction MainPage() {\r\n  const [count, setCount] = useState(\r\n    parseInt(localStorage.getItem(\"count\")) || 0\r\n  ); // make as task id\r\n\r\n  const todos = useSelector((state) => state.todos);\r\n  const inProgress = useSelector((state) => state.inProgress);\r\n  const completed = useSelector((state) => state.completed);\r\n  const dispatch = useDispatch();\r\n\r\n  const addToDo = (todo) => {\r\n    dispatch(add_ToDo({ id: count, content: todo }));\r\n    setCount(count + 1);\r\n    localStorage.setItem(\"count\", count + 1);\r\n  };\r\n\r\n  const addNextStage = (task, currentStage, nextStage) => {\r\n    if (nextStage === \"progress\") dispatch(add_InProgress(task));\r\n    if (nextStage === \"todo\") dispatch(add_ToDo(task));\r\n    if (nextStage === \"complete\") dispatch(add_Completed(task));\r\n\r\n    if (currentStage !== nextStage) removeFromStage(task, currentStage);\r\n  };\r\n\r\n  const removeFromStage = (task, stage) => {\r\n    if (stage === \"todo\") dispatch(remove_ToDo(task));\r\n    else if (stage === \"progress\") dispatch(remove_Progress(task));\r\n    // stage = complete\r\n    else dispatch(remove_Complete(task));\r\n  };\r\n\r\n  const handleUpdateName = (task, stage) => {\r\n    console.log(stage);\r\n    if (stage === \"todo\") dispatch(editName_ToDo(task));\r\n    else if (stage === \"progress\") dispatch(editName_Progress(task));\r\n    else if (stage === \"complete\") dispatch(editName_Complete(task));\r\n  };\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <div>\r\n        <AddToDo add={addToDo} />\r\n      </div>\r\n\r\n      <div id=\"task-boxes\">\r\n        <ToDo\r\n          list={todos}\r\n          addNextStage={addNextStage}\r\n          remove={removeFromStage}\r\n          onUpdateName={handleUpdateName}\r\n        />\r\n        <InProgress\r\n          list={inProgress}\r\n          addNextStage={addNextStage}\r\n          remove={removeFromStage}\r\n          onUpdateName={handleUpdateName}\r\n        />\r\n        <Completed\r\n          list={completed}\r\n          backStage={addNextStage}\r\n          remove={removeFromStage}\r\n          onUpdateName={handleUpdateName}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ToDoPage from './pages/main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToDoPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var todoTasks = JSON.parse(localStorage.getItem(\"todo\")) || [];\r\n\r\nconst todosReducer = (state = todoTasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      state = [...state, action.payload];\r\n      localStorage.setItem(\"todo\", JSON.stringify(state));\r\n      return state;\r\n    case \"REMOVE_TODO\":\r\n      state = state.filter((item) => item.id !== action.payload.id);\r\n      localStorage.setItem(\"todo\", JSON.stringify(state));\r\n      return state;\r\n    case \"EDIT_NAME_TODO\":\r\n      let newState = [...state];\r\n      let index = newState.findIndex((item) => item.id === action.payload?.id);\r\n      if (index === -1) {\r\n        newState.push(action.payload);\r\n      } else {\r\n        newState[index] = action.payload;\r\n      }\r\n      localStorage.setItem(\"todo\", JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n","var inProgressTasks = JSON.parse(localStorage.getItem(\"progress\")) || [];\r\n\r\nconst InProgressReducer = (state = inProgressTasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_INPROGRESS\":\r\n      state = [...state, action.payload];\r\n      localStorage.setItem(\"progress\", JSON.stringify(state));\r\n      return state;\r\n    case \"REMOVE_PROGRESS\":\r\n      state = state.filter((item) => item.id !== action.payload.id);\r\n      localStorage.setItem(\"progress\", JSON.stringify(state));\r\n      return state;\r\n    case \"EDIT_NAME_PROGRESS\":\r\n      let newState = [...state];\r\n      let index = newState.findIndex((item) => item.id === action.payload?.id);\r\n      if (index === -1) {\r\n        newState.push(action.payload);\r\n      } else {\r\n        newState[index] = action.payload;\r\n      }\r\n      localStorage.setItem(\"progress\", JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default InProgressReducer;\r\n","var completedTasks = JSON.parse(localStorage.getItem(\"complete\")) || [];\r\n\r\nconst completedReducer = (state = completedTasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_COMPLETED\":\r\n      state = [...state, action.payload];\r\n      localStorage.setItem(\"complete\", JSON.stringify(state));\r\n      return state;\r\n    case \"REMOVE_COMPLETE\":\r\n      state = state.filter((item) => item.id !== action.payload.id);\r\n      localStorage.setItem(\"complete\", JSON.stringify(state));\r\n      return state;\r\n    case \"EDIT_NAME_COMPLETE\":\r\n      let newState = [...state];\r\n      let index = newState.findIndex((item) => item.id === action.payload?.id);\r\n      if (index === -1) {\r\n        newState.push(action.payload);\r\n      } else {\r\n        newState[index] = action.payload;\r\n      }\r\n      localStorage.setItem(\"complete\", JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default completedReducer;\r\n","import {combineReducers} from 'redux'\r\nimport todosReducer from  './todos'\r\nimport inProgress from './inProgress'\r\nimport completed from './completed'\r\n\r\nconst rootReducer = combineReducers({ \r\n    todos: todosReducer, inProgress: inProgress, completed: completed\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport rootStore from './reducers/index';\r\n\r\nconst store = createStore(\r\n  rootStore, \r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()      //for CHROME REDUX DEVTOOLS extension\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}