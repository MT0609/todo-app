{"version":3,"sources":["img/task.png","img/doing.png","img/complete.png","actions/index.js","components/addToDo.js","components/edit.js","components/todo.js","components/inProgress.js","components/completed.js","pages/main.js","App.js","serviceWorker.js","reducers/todos.js","reducers/inProgress.js","reducers/completed.js","reducers/index.js","index.js"],"names":["module","exports","add_ToDo","obj","type","payload","AddToDo","add","useState","input","setInput","onSubmit","e","preventDefault","match","Grid","container","spacing","justify","item","xs","md","placeholder","value","onChange","target","autoFocus","Button","color","style","padding","height","fontSize","fontWeight","variant","disableElevation","Add","Transition","React","forwardRef","props","ref","Slide","direction","useStyles","makeStyles","root","EditDialog","classes","show","onclose","onupdate","data","name","setName","handleClose","handleUpdate","id","content","Container","maxWidth","Dialog","open","TransitionComponent","onClose","fullWidth","className","DialogTitle","DialogContent","TextField","disabled","label","InputProps","onKeyPress","key","DialogActions","onClick","ToDo","list","addNextStage","remove","onUpdateName","onMoveOver","updateShow","SetUpdateShow","selectTask","setSelectTask","onDragOver","onDrop","stage","JSON","parse","dataTransfer","getData","alt","src","require","map","task","draggable","onDragStart","setData","stringify","alignItems","sm","textAlign","IconButton","onEditClick","Edit","NativeSelect","handleSelect","inputProps","defaultValue","removeFromTodo","Delete","InProgress","CompletedTasks","backStage","removeFromComplete","MainPage","todos","useSelector","state","inProgress","completed","dispatch","useDispatch","currentStage","nextStage","add_Completed","removeFromStage","remove_Progress","remove_Complete","handleUpdateName","editName_Progress","editName_Complete","todo","uuidv1","App","Boolean","window","location","hostname","todoTasks","localStorage","getItem","todosReducer","action","setItem","filter","newState","index","findIndex","push","inProgressTasks","InProgressReducer","completedTasks","completedReducer","rootReducer","combineReducers","store","createStore","rootStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa5cf51e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/task.99fe34de.png\";","module.exports = __webpack_public_path__ + \"static/media/doing.4a10b842.png\";","module.exports = __webpack_public_path__ + \"static/media/complete.dc2fd78b.png\";","export const add_ToDo = (obj) => {\r\n  return {\r\n    type: \"ADD_TODO\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const add_InProgress = (obj) => {\r\n  return {\r\n    type: \"ADD_INPROGRESS\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const add_Completed = (obj) => {\r\n  return {\r\n    type: \"ADD_COMPLETED\",\r\n    payload: obj,\r\n  };\r\n};\r\nexport const remove_ToDo = (obj) => {\r\n  return {\r\n    type: \"REMOVE_TODO\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const remove_Progress = (obj) => {\r\n  return {\r\n    type: \"REMOVE_PROGRESS\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const remove_Complete = (obj) => {\r\n  return {\r\n    type: \"REMOVE_COMPLETE\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const editName_ToDo = (obj) => {\r\n  return {\r\n    type: \"EDIT_NAME_TODO\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const editName_Progress = (obj) => {\r\n  return {\r\n    type: \"EDIT_NAME_PROGRESS\",\r\n    payload: obj,\r\n  };\r\n};\r\n\r\nexport const editName_Complete = (obj) => {\r\n  return {\r\n    type: \"EDIT_NAME_COMPLETE\",\r\n    payload: obj,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport \"./style/addForm.css\";\r\n\r\nfunction AddToDo({ add }) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setInput(\"\");\r\n    let regex = /^[0-9a-zA-Z]+/g;\r\n    if (input.match(regex) && add) add(input);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item xs={8} md={10}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"add to-do item...\"\r\n            value={input}\r\n            onChange={handleInputChange}\r\n            autoFocus=\"true\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            color=\"primary\"\r\n            style={{\r\n              padding: \"1rem 0\",\r\n              height: \"70%\",\r\n              fontSize: \"2rem\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            disableElevation\r\n          >\r\n            <Add fontSize=\"large\" />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddToDo;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& .MuiTypography-h6\": {\r\n      fontSize: \"2rem\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function EditDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const { show = false, onclose, onupdate, data = {} } = props;\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    if (onclose) onclose();\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    if (onupdate) {\r\n      setName(\"\");\r\n      onupdate({\r\n        id: data.id,\r\n        content: name,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Dialog\r\n        open={show}\r\n        TransitionComponent={Transition}\r\n        onClose={handleClose}\r\n        fullWidth\r\n        className={classes.root}\r\n      >\r\n        <DialogTitle>Edit task name</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            disabled\r\n            value={data?.content}\r\n            label=\"Task name\"\r\n            InputProps={{\r\n              style: {\r\n                fontSize: \"1.5rem\",\r\n              },\r\n            }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            autoFocus\r\n            label=\"New name\"\r\n            InputProps={{\r\n              style: {\r\n                fontSize: \"1.5rem\",\r\n              },\r\n            }}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") handleUpdate();\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleUpdate} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport EditDialog from \"./edit\";\r\nimport \"./style/task-box.css\";\r\n\r\nfunction ToDo(props) {\r\n  const { list, addNextStage, remove, onUpdateName, onMoveOver } = props;\r\n\r\n  const [updateShow, SetUpdateShow] = useState(false);\r\n  const [selectTask, setSelectTask] = useState(null);\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (addNextStage) addNextStage(task, \"todo\", e.target.value);\r\n  };\r\n\r\n  const removeFromTodo = (task) => {\r\n    if (remove) remove(task, \"todo\");\r\n  };\r\n\r\n  const onEditClick = (task) => {\r\n    setSelectTask(task);\r\n    SetUpdateShow(true);\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    if (!task.content) return;\r\n    if (onUpdateName) onUpdateName(task, \"todo\");\r\n    SetUpdateShow(false);\r\n  };\r\n\r\n  const onDragStart = (e, task) => {\r\n    e.dataTransfer.setData(\"task\", JSON.stringify(task));\r\n    e.dataTransfer.setData(\"stage\", \"todo\");\r\n  };\r\n\r\n  const onDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onDrop = (e, stage) => {\r\n    if (onMoveOver)\r\n      onMoveOver(\r\n        JSON.parse(e.dataTransfer.getData(\"task\")),\r\n        e.dataTransfer.getData(\"stage\"),\r\n        stage\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"todo-box\"\r\n      className=\"task-box\"\r\n      onDragOver={(e) => onDragOver(e)}\r\n      onDrop={(e) => onDrop(e, \"todo\")}\r\n    >\r\n      <img alt=\"task\" src={require(\"../img/task.png\")} />\r\n      <h1>PLAN TASKS</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div\r\n            className=\"task\"\r\n            key={task.id}\r\n            draggable\r\n            onDragStart={(e) => onDragStart(e, task)}\r\n          >\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  <IconButton onClick={() => onEditClick(task)}>\r\n                    <Edit fontSize=\"large\" />\r\n                  </IconButton>\r\n\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"todo\"\r\n                >\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">PROGRESS</option>\r\n                  <option value=\"complete\">COMPLETE</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromTodo(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <EditDialog\r\n        data={selectTask}\r\n        show={updateShow}\r\n        onclose={() => SetUpdateShow(false)}\r\n        onupdate={handleEdit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport EditDialog from \"./edit\";\r\nimport \"./style/task-box.css\";\r\n\r\nfunction InProgress(props) {\r\n  const { list, addNextStage, remove, onUpdateName, onMoveOver } = props;\r\n\r\n  const [updateShow, SetUpdateShow] = useState(false);\r\n  const [selectTask, setSelectTask] = useState(null);\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (addNextStage) addNextStage(task, \"progress\", e.target.value);\r\n  };\r\n\r\n  const removeFromProgress = (item) => {\r\n    if (remove) remove(item, \"progress\");\r\n  };\r\n\r\n  const onEditClick = (task) => {\r\n    setSelectTask(task);\r\n    SetUpdateShow(true);\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    if (!task.content) return;\r\n    if (onUpdateName) onUpdateName(task, \"progress\");\r\n    SetUpdateShow(false);\r\n  };\r\n\r\n  const onDragStart = (e, task) => {\r\n    e.dataTransfer.setData(\"task\", JSON.stringify(task));\r\n    e.dataTransfer.setData(\"stage\", \"progress\");\r\n  };\r\n\r\n  const onDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onDrop = (e, stage) => {\r\n    if (onMoveOver)\r\n      onMoveOver(\r\n        JSON.parse(e.dataTransfer.getData(\"task\")),\r\n        e.dataTransfer.getData(\"stage\"),\r\n        stage\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"progress-box\"\r\n      className=\"task-box\"\r\n      onDragOver={(e) => onDragOver(e)}\r\n      onDrop={(e) => onDrop(e, \"progress\")}\r\n    >\r\n      <img alt=\"task\" src={require(\"../img/doing.png\")} />\r\n      <h1>IN PROGRESS</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div\r\n            className=\"task\"\r\n            key={task.id}\r\n            draggable\r\n            onDragStart={(e) => onDragStart(e, task)}\r\n          >\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  <IconButton onClick={() => onEditClick(task)}>\r\n                    <Edit fontSize=\"large\" />\r\n                  </IconButton>\r\n\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"progress\"\r\n                >\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">PENDING</option>\r\n                  <option value=\"complete\">COMPLETE</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromProgress(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <EditDialog\r\n        data={selectTask}\r\n        show={updateShow}\r\n        onclose={() => SetUpdateShow(false)}\r\n        onupdate={handleEdit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InProgress;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, NativeSelect, IconButton } from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport EditDialog from \"./edit\";\r\nimport \"./style/task-box.css\";\r\n\r\nfunction CompletedTasks(props) {\r\n  const { list, remove, backStage, onUpdateName, onMoveOver } = props;\r\n\r\n  const [updateShow, SetUpdateShow] = useState(false);\r\n  const [selectTask, setSelectTask] = useState(null);\r\n\r\n  const handleSelect = (e, task) => {\r\n    if (backStage) backStage(task, \"completed\", e.target.value);\r\n  };\r\n\r\n  const removeFromComplete = (task) => {\r\n    if (remove) remove(task, \"complete\");\r\n  };\r\n\r\n  const onEditClick = (task) => {\r\n    setSelectTask(task);\r\n    SetUpdateShow(true);\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    if (!task.content) return;\r\n    if (onUpdateName) onUpdateName(task, \"complete\");\r\n    SetUpdateShow(false);\r\n  };\r\n\r\n  const onDragStart = (e, task) => {\r\n    e.dataTransfer.setData(\"task\", JSON.stringify(task));\r\n    e.dataTransfer.setData(\"stage\", \"complete\");\r\n  };\r\n\r\n  const onDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onDrop = (e, stage) => {\r\n    if (onMoveOver)\r\n      onMoveOver(\r\n        JSON.parse(e.dataTransfer.getData(\"task\")),\r\n        e.dataTransfer.getData(\"stage\"),\r\n        stage\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"complete-box\"\r\n      className=\"task-box\"\r\n      onDragOver={(e) => onDragOver(e)}\r\n      onDrop={(e) => onDrop(e, \"complete\")}\r\n    >\r\n      <img alt=\"task\" src={require(\"../img/complete.png\")} />\r\n      <h1>COMPLETED</h1>\r\n      <div className=\"task-list\">\r\n        {list.map((task) => (\r\n          <div\r\n            className=\"task\"\r\n            key={task.id}\r\n            draggable\r\n            onDragStart={(e) => onDragStart(e, task)}\r\n          >\r\n            <Grid container alignItems=\"center\" justify=\"space-between\">\r\n              <Grid item xs={12} sm={7} style={{ textAlign: \"left\" }}>\r\n                <p variant=\"h5\" className=\"task-content\">\r\n                  <IconButton onClick={() => onEditClick(task)}>\r\n                    <Edit fontSize=\"large\" />\r\n                  </IconButton>\r\n\r\n                  {task.content}\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={8} md={3}>\r\n                <NativeSelect\r\n                  fullWidth\r\n                  onChange={(e) => handleSelect(e, task)}\r\n                  inputProps={{\r\n                    style: { padding: \"0.5rem\", fontSize: \"1.3rem\" },\r\n                  }}\r\n                  defaultValue=\"completed\"\r\n                >\r\n                  <option value=\"completed\">COMPLETED</option>\r\n                  <option value=\"todo\">PLANNING</option>\r\n                  <option value=\"progress\">IN PROGRESS</option>\r\n                </NativeSelect>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <IconButton onClick={() => removeFromComplete(task)}>\r\n                  <Delete fontSize=\"large\" style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <EditDialog\r\n        data={selectTask}\r\n        show={updateShow}\r\n        onclose={() => SetUpdateShow(false)}\r\n        onupdate={handleEdit}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompletedTasks;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport {\r\n  add_ToDo,\r\n  add_InProgress,\r\n  add_Completed,\r\n  remove_ToDo,\r\n  remove_Progress,\r\n  remove_Complete,\r\n  editName_ToDo,\r\n  editName_Progress,\r\n  editName_Complete,\r\n} from \"../actions/index\";\r\nimport AddToDo from \"../components/addToDo\";\r\nimport ToDo from \"../components/todo\";\r\nimport InProgress from \"../components/inProgress\";\r\nimport Completed from \"../components/completed\";\r\nimport \"./main.css\";\r\n\r\nfunction MainPage() {\r\n  const todos = useSelector((state) => state.todos);\r\n  const inProgress = useSelector((state) => state.inProgress);\r\n  const completed = useSelector((state) => state.completed);\r\n  const dispatch = useDispatch();\r\n\r\n  const addToDo = (todo) => {\r\n    dispatch(add_ToDo({ id: uuidv1(), content: todo }));\r\n  };\r\n\r\n  const addNextStage = (task, currentStage, nextStage) => {\r\n    if (currentStage === nextStage) return;\r\n    if (nextStage === \"progress\") dispatch(add_InProgress(task));\r\n    if (nextStage === \"todo\") dispatch(add_ToDo(task));\r\n    if (nextStage === \"complete\") dispatch(add_Completed(task));\r\n    removeFromStage(task, currentStage);\r\n  };\r\n\r\n  const removeFromStage = (task, stage) => {\r\n    if (stage === \"todo\") dispatch(remove_ToDo(task));\r\n    else if (stage === \"progress\") dispatch(remove_Progress(task));\r\n    // stage = complete\r\n    else dispatch(remove_Complete(task));\r\n  };\r\n\r\n  const handleUpdateName = (task, stage) => {\r\n    if (stage === \"todo\") dispatch(editName_ToDo(task));\r\n    else if (stage === \"progress\") dispatch(editName_Progress(task));\r\n    else if (stage === \"complete\") dispatch(editName_Complete(task));\r\n  };\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <div>\r\n        <AddToDo add={addToDo} />\r\n      </div>\r\n\r\n      <div id=\"task-boxes\">\r\n        <ToDo\r\n          list={todos}\r\n          addNextStage={addNextStage}\r\n          remove={removeFromStage}\r\n          onUpdateName={handleUpdateName}\r\n          onMoveOver={addNextStage}\r\n        />\r\n        <InProgress\r\n          list={inProgress}\r\n          addNextStage={addNextStage}\r\n          remove={removeFromStage}\r\n          onUpdateName={handleUpdateName}\r\n          onMoveOver={addNextStage}\r\n        />\r\n        <Completed\r\n          list={completed}\r\n          backStage={addNextStage}\r\n          remove={removeFromStage}\r\n          onUpdateName={handleUpdateName}\r\n          onMoveOver={addNextStage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ToDoPage from './pages/main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToDoPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var todoTasks = JSON.parse(localStorage.getItem(\"todo\")) || [];\r\n\r\nconst todosReducer = (state = todoTasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      state = [...state, action.payload];\r\n      localStorage.setItem(\"todo\", JSON.stringify(state));\r\n      return state;\r\n    case \"REMOVE_TODO\":\r\n      state = state.filter((item) => item.id !== action.payload.id);\r\n      localStorage.setItem(\"todo\", JSON.stringify(state));\r\n      return state;\r\n    case \"EDIT_NAME_TODO\":\r\n      let newState = [...state];\r\n      let index = newState.findIndex((item) => item.id === action.payload?.id);\r\n      if (index === -1) {\r\n        newState.push(action.payload);\r\n      } else {\r\n        newState[index] = action.payload;\r\n      }\r\n      localStorage.setItem(\"todo\", JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n","var inProgressTasks = JSON.parse(localStorage.getItem(\"progress\")) || [];\r\n\r\nconst InProgressReducer = (state = inProgressTasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_INPROGRESS\":\r\n      state = [...state, action.payload];\r\n      localStorage.setItem(\"progress\", JSON.stringify(state));\r\n      return state;\r\n    case \"REMOVE_PROGRESS\":\r\n      state = state.filter((item) => item.id !== action.payload.id);\r\n      localStorage.setItem(\"progress\", JSON.stringify(state));\r\n      return state;\r\n    case \"EDIT_NAME_PROGRESS\":\r\n      let newState = [...state];\r\n      let index = newState.findIndex((item) => item.id === action.payload?.id);\r\n      if (index === -1) {\r\n        newState.push(action.payload);\r\n      } else {\r\n        newState[index] = action.payload;\r\n      }\r\n      localStorage.setItem(\"progress\", JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default InProgressReducer;\r\n","var completedTasks = JSON.parse(localStorage.getItem(\"complete\")) || [];\r\n\r\nconst completedReducer = (state = completedTasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_COMPLETED\":\r\n      state = [...state, action.payload];\r\n      localStorage.setItem(\"complete\", JSON.stringify(state));\r\n      return state;\r\n    case \"REMOVE_COMPLETE\":\r\n      state = state.filter((item) => item.id !== action.payload.id);\r\n      localStorage.setItem(\"complete\", JSON.stringify(state));\r\n      return state;\r\n    case \"EDIT_NAME_COMPLETE\":\r\n      let newState = [...state];\r\n      let index = newState.findIndex((item) => item.id === action.payload?.id);\r\n      if (index === -1) {\r\n        newState.push(action.payload);\r\n      } else {\r\n        newState[index] = action.payload;\r\n      }\r\n      localStorage.setItem(\"complete\", JSON.stringify(newState));\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default completedReducer;\r\n","import {combineReducers} from 'redux'\r\nimport todosReducer from  './todos'\r\nimport inProgress from './inProgress'\r\nimport completed from './completed'\r\n\r\nconst rootReducer = combineReducers({ \r\n    todos: todosReducer, inProgress: inProgress, completed: completed\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport rootStore from './reducers/index';\r\n\r\nconst store = createStore(\r\n  rootStore, \r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()      //for CHROME REDUX DEVTOOLS extension\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}