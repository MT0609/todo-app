{"version":3,"sources":["img/task.png","img/doing.png","img/complete.png","actions/index.js","components/addToDo.js","components/todo.js","components/inProgress.js","components/completed.js","pages/main.js","App.js","serviceWorker.js","reducers/todos.js","reducers/inProgress.js","reducers/completed.js","reducers/index.js","index.js"],"names":["module","exports","add_ToDo","obj","type","payload","add_InProgress","add_Completed","AddToDo","props","useState","input","setInput","id","onSubmit","e","preventDefault","match","add","placeholder","value","onChange","target","autoFocus","ToDo","list","addNextStage","remove","addToNextStage","item","currentStage","nextStage","className","alt","src","require","map","content","onClick","removeFromTodo","InProgress","task","removeFromProgress","CompletedTasks","backStage","addToStage","MainPage","parseInt","localStorage","getItem","count","setCount","todos","useSelector","state","inProgress","completed","dispatch","useDispatch","removeFromStage","stage","remove_Progress","remove_Complete","todo","setItem","App","Boolean","window","location","hostname","todoTasks","JSON","parse","todosReducer","action","stringify","filter","inProgressTasks","InProgressReducer","completedTasks","completedReducer","rootReducer","combineReducers","store","createStore","rootStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.20ae47f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/task.99fe34de.png\";","module.exports = __webpack_public_path__ + \"static/media/doing.4a10b842.png\";","module.exports = __webpack_public_path__ + \"static/media/complete.dc2fd78b.png\";","export const add_ToDo = (obj) => {\r\n    return {\r\n        type: \"ADD_TODO\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const add_InProgress = (obj) => {\r\n    return {\r\n        type: \"ADD_INPROGRESS\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const add_Completed = (obj) => {\r\n    return {\r\n        type: \"ADD_COMPLETED\",\r\n        payload: obj\r\n    }\r\n}\r\nexport const remove_ToDo = (obj) => {\r\n    return {\r\n        type: \"REMOVE_TODO\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const remove_Progress = (obj) => {\r\n    return {\r\n        type: \"REMOVE_PROGRESS\",\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const remove_Complete = (obj) => {\r\n    return {\r\n        type: \"REMOVE_COMPLETE\",\r\n        payload: obj\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './style/addForm.css'\r\n\r\nfunction AddToDo(props) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let regex = /^[0-9a-zA-Z]+/g;\r\n    if (input.match(regex))\r\n      props.add(input);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div id=\"form\">\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"add to-do item...\" value={input} onChange={handleInputChange} autoFocus=\"true\" />\r\n            <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddToDo;","import React, {useState, useEffect} from 'react';\r\nimport './style/task-box.css'\r\n\r\nfunction ToDo(props) {\r\n  const {list, addNextStage, remove} = props;\r\n\r\n  const addToNextStage = (item, currentStage, nextStage) => {\r\n    if (addNextStage) \r\n      addNextStage(item, currentStage, nextStage);\r\n  }   \r\n\r\n  const removeFromTodo = (item) => {\r\n    if (remove)\r\n      remove(item, \"todo\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"todo-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require('../img/task.png')} />\r\n      <h1>PLAN TASKS</h1>\r\n      <div className=\"task-list\">\r\n        {\r\n          list.map(item => (\r\n            <div className=\"task\">\r\n              <div className=\"task-content\">\r\n                <div>{item.content}</div>\r\n              </div>\r\n              <div className=\"task-button\">\r\n                <button className=\"progress\" onClick={() => addToNextStage(item, \"todo\", \"progress\")}>PROGRESS</button>\r\n                <button className=\"complete\" onClick={() => addToNextStage(item, \"todo\", \"complete\")}>COMPLETE</button>\r\n                <button onClick={() => removeFromTodo(item)}>DELETE</button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        } \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;","import React, {useState, useEffect} from 'react';\r\nimport './style/task-box.css'\r\n\r\nfunction InProgress(props) {\r\n  const {list, addNextStage, remove} = props;\r\n\r\n  const addToNextStage = (task, currentStage, nextStage) => {\r\n    if (addNextStage) \r\n      addNextStage(task, currentStage, nextStage);\r\n  }\r\n\r\n  const removeFromProgress = (item) => {\r\n    if (remove)\r\n      remove(item, \"progress\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"progress-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require('../img/doing.png')} />\r\n      <h1>IN PROGRESS</h1>\r\n      <div className=\"task-list\">\r\n        {\r\n          list.map(item => \r\n            <div className=\"task\">\r\n              <div className=\"task-content\">\r\n                <div>{item.content}</div>\r\n              </div>\r\n              <div className=\"task-button\">\r\n                <button className=\"todo\" onClick={() => addToNextStage(item, \"progress\", \"todo\")}>PLAN</button>\r\n                <button className=\"complete\" onClick={() => addToNextStage(item, \"progress\", \"complete\")}>COMPLETE</button>\r\n                <button onClick={() => removeFromProgress(item)}>DELETE</button>\r\n              </div> \r\n            </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InProgress;","import React, {useState, useEffect} from 'react';\r\nimport './style/task-box.css'\r\n\r\nfunction CompletedTasks(props) {\r\n  const {list, remove, backStage} = props;\r\n\r\n  const removeFromComplete = (task) => {\r\n    if (remove)\r\n      remove(task, \"complete\");\r\n  }\r\n\r\n  const addToStage = (task, currentStage, nextStage) => {\r\n    if (backStage)\r\n      backStage(task, currentStage, nextStage);\r\n  }\r\n\r\n  return (\r\n    <div id=\"complete-box\" className=\"task-box\">\r\n      <img alt=\"task\" src={require('../img/complete.png')} />\r\n      <h1>COMPLETED</h1>\r\n      <div className=\"task-list\">\r\n        {list.map(item => \r\n          <div className=\"task\">\r\n            <div className=\"task-content\">\r\n              <div>{item.content}</div>\r\n            </div>\r\n            <div className=\"task-button\">\r\n              <button className=\"todo\" onClick={() => addToStage(item, \"complete\", \"todo\")}>PLAN</button>\r\n              <button className=\"progress\" onClick={() => addToStage(item, \"complete\", \"progress\")}>PROGRESS</button>\r\n              <button onClick={() => removeFromComplete(item)}>DELETE</button>\r\n            </div>\r\n          </div>\r\n        )} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompletedTasks;","import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch, createDispatchHook} from 'react-redux';\r\nimport {add_ToDo, add_InProgress, add_Completed, remove_ToDo, remove_Progress, remove_Complete} from '../actions/index';\r\nimport AddToDo from '../components/addToDo'\r\nimport ToDo from '../components/todo'\r\nimport InProgress from '../components/inProgress'\r\nimport Completed from '../components/completed'\r\nimport './main.css'\r\n\r\nfunction MainPage() {\r\n  const [count, setCount] = useState(parseInt(localStorage.getItem(\"count\")) || 0);     // make as task id\r\n\r\n  const todos = useSelector(state => state.todos);\r\n  const inProgress = useSelector(state => state.inProgress)\r\n  const completed = useSelector(state => state.completed)\r\n  const dispatch = useDispatch();\r\n  \r\n  const addToDo = (todo) => {\r\n    dispatch(add_ToDo({id: count, content: todo}));\r\n    setCount(count + 1);\r\n    localStorage.setItem(\"count\", count + 1);\r\n  }\r\n\r\n  const addNextStage = (task, currentStage, nextStage) => {\r\n    if (currentStage === \"todo\") {\r\n      if (nextStage === \"progress\") {\r\n        dispatch(add_InProgress(task));\r\n      }\r\n      else if (nextStage === \"complete\") {\r\n        dispatch(add_Completed(task));\r\n      }\r\n    }\r\n    else if (currentStage === \"progress\") {\r\n      if (nextStage === \"complete\")\r\n        dispatch(add_Completed(task));\r\n      else if (nextStage === \"todo\")\r\n        dispatch(add_ToDo(task));\r\n    }\r\n    else { // current = \"complete\" \r\n      if (nextStage === \"progress\")\r\n        dispatch(add_InProgress(task));\r\n      else if (nextStage === \"todo\")\r\n        dispatch(add_ToDo(task));\r\n    }\r\n    removeFromStage(task, currentStage)\r\n  }\r\n\r\n  const removeFromStage = (task, stage) => {\r\n    if (stage === \"todo\") \r\n      dispatch(remove_ToDo(task));\r\n    else if (stage === \"progress\")\r\n      dispatch(remove_Progress(task));\r\n    else     // stage = complete\r\n      dispatch(remove_Complete(task));\r\n  }\r\n  \r\n  return (\r\n    <div id=\"main\">\r\n      <div>\r\n        <AddToDo add={addToDo} />\r\n      </div>\r\n\r\n      <div id=\"task-boxes\"> \r\n          <ToDo list={todos} addNextStage={addNextStage} remove={removeFromStage} />\r\n          <InProgress list={inProgress} addNextStage={addNextStage} remove={removeFromStage} />\r\n          <Completed list={completed} backStage={addNextStage} remove={removeFromStage}/>\r\n      </div>\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\nimport './App.css';\nimport ToDoPage from './pages/main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoPage />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","var todoTasks = JSON.parse(localStorage.getItem(\"todo\")) || [];\r\n\r\nconst todosReducer = (state = todoTasks, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\":\r\n            state = [...state, action.payload]\r\n            localStorage.setItem(\"todo\", JSON.stringify(state));\r\n            return state;   \r\n        case \"REMOVE_TODO\":\r\n            state = state.filter(item => item.id !== action.payload.id);\r\n            localStorage.setItem(\"todo\", JSON.stringify(state));\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todosReducer;","var inProgressTasks = JSON.parse(localStorage.getItem(\"inProgress\")) || [];\r\n\r\nconst InProgressReducer = (state = inProgressTasks, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_INPROGRESS\":\r\n            state = [...state, action.payload]\r\n            localStorage.setItem(\"inProgress\", JSON.stringify(state));\r\n            return state;\r\n        case \"REMOVE_PROGRESS\":\r\n            state = state.filter(item => item.id !== action.payload.id);\r\n            localStorage.setItem(\"inProgress\", JSON.stringify(state));\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default InProgressReducer;","var completedTasks = JSON.parse(localStorage.getItem(\"complete\")) || [];\r\n\r\nconst completedReducer = (state = completedTasks, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_COMPLETED\":\r\n            state = [...state, action.payload]\r\n            localStorage.setItem(\"complete\", JSON.stringify(state));\r\n            return state;\r\n        case \"REMOVE_COMPLETE\":\r\n            state = state.filter(item => item.id !== action.payload.id);\r\n            localStorage.setItem(\"complete\", JSON.stringify(state));\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default completedReducer;","import {combineReducers} from 'redux'\r\nimport todosReducer from  './todos'\r\nimport inProgress from './inProgress'\r\nimport completed from './completed'\r\n\r\nconst rootReducer = combineReducers({ \r\n    todos: todosReducer, inProgress: inProgress, completed: completed\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootStore from './reducers/index';\n\nconst store = createStore(\n  rootStore, \n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()      //for CHROME REDUX DEVTOOLS extension\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}